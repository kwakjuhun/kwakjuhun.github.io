{"version":3,"file":"component---src-templates-post-list-js-e26196099f3ccded0b8c.js","mappings":"wMAEMA,EAAWC,EAAAA,QAAAA,IAAAA,WAAH,8DAAGA,CAAH,qFAQI,SAACC,GAAD,OAAWA,EAAMC,MAAMC,OAAOC,SAK1CC,EAASL,EAAAA,QAAAA,IAAAA,WAAH,4DAAGA,CAAH,kEAONM,EAAON,EAAAA,QAAAA,IAAAA,WAAH,0DAAGA,CAAH,sCAKJO,EAAQP,EAAAA,QAAAA,GAAAA,WAAH,2DAAGA,CAAH,iRAME,SAACC,GAAD,OAAWA,EAAMC,MAAMC,OAAOK,eAcrCC,EAAUT,EAAAA,QAAAA,IAAAA,WAAH,6DAAGA,CAAH,qRAMA,SAACC,GAAD,OAAWA,EAAMC,MAAMC,OAAOO,iBAcrCC,EAAOX,EAAAA,QAAAA,IAAAA,WAAH,0DAAGA,CAAH,kCAiBV,EAbiB,SAAC,GAAuC,IAArCY,EAAoC,EAApCA,MAAOC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,QAASC,EAAc,EAAdA,QACtC,OACI,gBAAChB,EAAD,KACI,gBAACM,EAAD,CAAQW,IAAKD,IACb,gBAACT,EAAD,KACI,gBAACC,EAAD,KAAQK,GACR,gBAAC,EAAD,KAAOC,GACP,gBAACJ,EAAD,KAAUK,M,UC1C1B,EA7BiB,SAAC,GAA2B,IAAzBG,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,YAChBC,EAAeF,EAAKG,OAAOC,MAC3BC,EAAWJ,EAAYI,SAC7B,OACI,gBAAC,IAAD,KACI,gBAAC,IAAD,CACEV,MAAOU,EACPC,SAAU,CAAC,OAAD,gDAGZ,gBAAC,IAAD,KACKJ,EAAaK,KAAI,SAACP,EAAKQ,GACpB,IAAMb,EAAQK,EAAKS,KAAKC,YAAYf,MAC9BC,EAAOI,EAAKS,KAAKC,YAAYd,KAC7BC,EAAUG,EAAKS,KAAKE,QACpBZ,EAAM,IAAIC,EAAKS,KAAKG,KAEpBd,EAAUE,EAAKS,KAAKC,YAAYG,IAAIC,mBAAmB,GAAGC,gBAAgBC,OAAOC,SAASlB,IAChG,OACE,gBAAC,EAAAmB,KAAD,CAAMC,IAAKX,EAAOY,GAAIrB,GACpB,gBAAC,EAAD,CAAUJ,MAAOA,EAAOC,KAAMA,EAAMC,QAASA,EAASC,QAASA","sources":["webpack://a_z-blog/./src/components/contentComponents/postInfo.js","webpack://a_z-blog/./src/templates/postList.js"],"sourcesContent":["import React from 'react';\nimport styled from \"styled-components\";\nconst PostInfo = styled.div`\n    display: list-item;\n    // width: 900px;\n    width:98%;\n    margin:1%;\n    height: 250px;\n    // border: 1px solid black;\n    display: flex;\n    background: ${(props) => props.theme.colors.third};\n    // margin:10px;\n\n`;\n\nconst ImgBox = styled.img`\n    height: 230px;\n    width: 230px;\n    margin:10px;\n    border: 1px solid black;\n`;\n\nconst Info = styled.div`  \n    margin-left : 20px;\n    width : 650px;\n`;\n\nconst Title = styled.h1`\n    display: inline-block; \n    width: 590px; \n    white-space: nowrap; \n    overflow: hidden; \n    text-overflow: ellipsis; \n    color: ${(props) => props.theme.colors.primaryText};\n\n    white-space: normal; \n    line-height: 1; \n    height: 1em; \n    text-align: left; \n    word-wrap: break-word; \n    display: -webkit-box; \n    -webkit-line-clamp: 1; \n    -webkit-box-orient: vertical;\n\n    margin-top:30px;\n`\n\nconst Content = styled.div`\n    display: inline-block; \n    width: 590px; \n    white-space: nowrap; \n    overflow: hidden; \n    text-overflow: ellipsis; \n    color: ${(props) => props.theme.colors.secondaryText};\n\n    white-space: normal; \n    line-height: 1.5; \n    height: 4.5em; \n    text-align: left; \n    word-wrap: break-word; \n    display: -webkit-box; \n    -webkit-line-clamp: 3; \n    -webkit-box-orient: vertical;\n\n    margin-top:30px;\n`;\n\nconst Date = styled.div`\n    color: gray;\n    margin-left: 10px;\n`;\nconst postInfo = ({ title, date, content, imgPath }) => {\n    return(\n        <PostInfo>\n            <ImgBox src={imgPath}></ImgBox>\n            <Info>\n                <Title>{title}</Title>\n                <Date>{date}</Date>\n                <Content>{content}</Content>\n            </Info>\n        </PostInfo>\n    )\n}\n\nexport default postInfo;","import React from 'react';\nimport Index from './index'\nimport Content from '../components/content'\nimport {graphql, Link} from 'gatsby'\nimport PostInfo from '../components/contentComponents/postInfo'\nimport SEO from '../components/seo';\n\nconst PostList = ({ data, pageContext }) => {   \n    const postListData = data.allMdx.edges\n    const category = pageContext.category\n    return (\n        <Index>\n            <SEO\n              title={category}\n              keywords={[`blog`, `gatsby`, `javascript`, `react`,`github pages`]}\n            />\n\n            <Content>\n                {postListData.map((data,index)=>{\n                    const title = data.node.frontmatter.title\n                    const date = data.node.frontmatter.date\n                    const content = data.node.excerpt\n                    const src = \"/\"+data.node.slug\n                    // const imgPath = \"https://kwakjuhun.github.io/\"+data.node.frontmatter.img.childrenImageSharp[0].gatsbyImageData.images.fallback.src\n                    const imgPath = data.node.frontmatter.img.childrenImageSharp[0].gatsbyImageData.images.fallback.src\n                    return (\n                      <Link key={index} to={src}>\n                        <PostInfo title={title} date={date} content={content} imgPath={imgPath}></PostInfo>\n                      </Link>\n                    )\n                })}\n            </Content>\n        </Index>\n    )\n};\n\nexport default PostList;\n\nexport const pageQuery = graphql`\nquery postList($category: String) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMdx(\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: {frontmatter: {category: {in: [$category]}}}) {\n      edges {\n        node {\n          slug\n          frontmatter {\n            title\n            category\n            date\n            img {\n                childrenImageSharp {\n                  gatsbyImageData(formats: AUTO)\n                }\n              }\n            }\n        excerpt\n        }\n      }\n    }\n  }\n  `"],"names":["PostInfo","styled","props","theme","colors","third","ImgBox","Info","Title","primaryText","Content","secondaryText","Date","title","date","content","imgPath","src","data","pageContext","postListData","allMdx","edges","category","keywords","map","index","node","frontmatter","excerpt","slug","img","childrenImageSharp","gatsbyImageData","images","fallback","Link","key","to"],"sourceRoot":""}