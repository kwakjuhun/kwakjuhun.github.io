{"version":3,"file":"component---src-templates-post-list-js-106a8871d3ee80da5db2.js","mappings":"8HAGMA,EAAcC,EAAAA,QAAAA,IAAAA,WAAH,6DAAGA,CAAH,4JAWXC,EAAQD,EAAAA,QAAAA,IAAAA,WAAH,uDAAGA,CAAH,uHAKa,SAAAE,GAAK,OAAIA,EAAMC,MAAMC,KAAKC,UAK5CC,EAAON,EAAAA,QAAAA,IAAAA,WAAH,sDAAGA,CAAH,kDAIJO,EAAOP,EAAAA,QAAAA,IAAAA,WAAH,sDAAGA,CAAH,MAsBV,IAlBa,SAAC,GAAqB,IAAnBQ,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,KACnB,YAAYC,IAATD,EAEK,gBAACV,EAAD,KACI,gBAACE,EAAD,KAAQO,IAKZ,gBAACT,EAAD,KACI,gBAACE,EAAD,KAAQO,GACR,gBAACF,EAAD,KAAOG,GACP,gBAACF,EAAD,S,uDChChB,SAASI,EAAT,GAAkD,IAAnCC,EAAkC,EAAlCA,YAAaC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,KAAMN,EAAS,EAATA,MAC9BO,GAASC,EAAAA,EAAAA,gBAAe,YAAxBD,KAcFE,EAAkBL,GAAeG,EAAKG,aAAaN,YAEzD,OACE,gBAAC,IAAD,CACEO,eAAgB,CACdN,KAAAA,GAEFL,MAAOA,EACPY,cAAa,QAAUL,EAAKG,aAAaV,MACzCM,KAAM,CACJ,CACEO,KAAK,cACLC,QAASL,GAEX,CACEM,SAAS,WACTD,QAASd,GAEX,CACEe,SAAS,iBACTD,QAASL,GAEX,CACEM,SAAS,UACTD,QAAQ,WAEV,CACED,KAAK,eACLC,QAAQ,WAEV,CACED,KAAK,kBACLC,QAASP,EAAKG,aAAaM,QAE7B,CACEH,KAAK,gBACLC,QAASd,GAEX,CACEa,KAAK,sBACLC,QAASL,IAEXQ,OAAOX,KAKfH,EAAIe,aAAe,CACjBb,KAAK,KACLC,KAAM,GACNF,YAAY,IAUd,O,qHCpFiBZ,EAAAA,QAAAA,IAAAA,WAAH,8DAAGA,CAAH,ueA6BCA,EAAAA,QAAAA,IAAAA,WAAH,4DAAGA,CAAH,6MAeCA,EAAAA,QAAAA,IAAAA,WAAH,0DAAGA,CAAH,+EAQIA,EAAAA,QAAAA,GAAAA,WAAH,2DAAGA,CAAH,uTAoBKA,EAAAA,QAAAA,IAAAA,WAAH,6DAAGA,CAAH,+UAuBAA,EAAAA,QAAAA,IAAAA,WAAH,0DAAGA,CAAH,mE,mBCzFJ2B,EAAkB3B,EAAAA,QAAAA,IAAAA,WAAH,qEAAGA,CAAH,0CAKf4B,EAAO5B,EAAAA,QAAAA,IAAAA,WAAH,0DAAGA,CAAH,mEAMJC,EAAQD,EAAAA,QAAAA,IAAAA,WAAH,2DAAGA,CAAH,+EA+DX,EAtDiB,SAAC,GAA2B,IAAzB6B,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,YAChBC,EAAeF,EAAKG,OAAOC,MAC3BC,EAAWJ,EAAYI,SACzBC,EAAO,EACX,OACI,gCACI,gBAAC,IAAD,CACE3B,MAAO0B,EACPE,SAAU,CAAC,OAAD,6CAAwDF,KAEpE,gBAAC,IAAD,CAAM1B,MAAO0B,IACb,gBAACP,EAAD,KAEMI,EAAaM,KAAI,SAACR,EAAKS,GACrB,IAAM9B,EAAQqB,EAAKU,KAAKC,YAAYhC,MAEpC,EADaqB,EAAKU,KAAKC,YAAY/B,KACZgC,MAAM,KAAtBC,EAAP,KAAUC,EAAV,KAAaC,EAAb,KACMC,EAAM,IAAIhB,EAAKU,KAAKO,KAE1B,OAAGX,GAAQO,GACTP,EAAOO,EAEL,gCACE,gBAACd,EAAD,KAAOO,GACP,gBAAC,EAAAY,KAAD,CAAMC,IAAKV,EAAOW,GAAIJ,GAAK,gBAAC,EAAD,SAASF,EAAT,IAAaC,EAAb,OAAoBpC,MAM/C,gBAAC,EAAAuC,KAAD,CAAMC,IAAKV,EAAOW,GAAIJ,GAAK,gBAAC,EAAD,SAASF,EAAT,IAAaC,EAAb,OAAoBpC","sources":["webpack://a_z-blog/./src/components/info.js","webpack://a_z-blog/./src/components/seo.js","webpack://a_z-blog/./src/components/contentComponents/postInfo.js","webpack://a_z-blog/./src/templates/postList.js"],"sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst InfoElement = styled.div`\r\n    position: absolute;\r\n    top: 0px;\r\n    width: 100%;\r\n    background-color: #9AC95F;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: left;\r\n    height: 500px;\r\n`\r\nconst Title = styled.div`\r\n    color: #113800;\r\n    font-size: 3em;\r\n    font-weight: 900;\r\n    margin-left: 5vw;\r\n    @media screen and ${props => props.theme.size.mobile}{\r\n        font-size: 2em;   \r\n        font-weight: 600;\r\n    }\r\n`\r\nconst Date = styled.div`\r\n    margin-left: 5vw;\r\n    color: rgba(255,255,255,0.5);\r\n`\r\nconst Tags = styled.div`\r\n\r\n`\r\n\r\nconst Info = ({ title, date }) => {\r\n    if(date === undefined)\r\n        return (\r\n            <InfoElement>\r\n                <Title>{title}</Title>\r\n            </InfoElement>\r\n        )\r\n    else\r\n        return(\r\n            <InfoElement>\r\n                <Title>{title}</Title>\r\n                <Date>{date}</Date>\r\n                <Tags></Tags>\r\n            </InfoElement>\r\n        )\r\n    \r\n}\r\n\r\nexport default Info;","/**\r\n * SEO component that queries for data with\r\n *  Gatsby's useStaticQuery React hook\r\n *\r\n * See: https://www.gatsbyjs.org/docs/use-static-query/\r\n */\r\n\r\nimport React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Helmet from 'react-helmet'\r\nimport { useStaticQuery, graphql } from 'gatsby'\r\n\r\nfunction SEO({ description, lang, meta, title }) {\r\n  const { site } = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n            author\r\n          }\r\n        }\r\n      }\r\n    `\r\n  )\r\n\r\n  const metaDescription = description || site.siteMetadata.description\r\n\r\n  return (\r\n    <Helmet\r\n      htmlAttributes={{\r\n        lang,\r\n      }}\r\n      title={title}\r\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\r\n      meta={[\r\n        {\r\n          name: `description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          property: `og:description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:type`,\r\n          content: `website`,\r\n        },\r\n        {\r\n          name: `twitter:card`,\r\n          content: `summary`,\r\n        },\r\n        {\r\n          name: `twitter:creator`,\r\n          content: site.siteMetadata.author,\r\n        },\r\n        {\r\n          name: `twitter:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          name: `twitter:description`,\r\n          content: metaDescription,\r\n        },\r\n      ].concat(meta)}\r\n    />\r\n  )\r\n}\r\n\r\nSEO.defaultProps = {\r\n  lang: `en`,\r\n  meta: [],\r\n  description: ``,\r\n}\r\n\r\nSEO.propTypes = {\r\n  description: PropTypes.string,\r\n  lang: PropTypes.string,\r\n  meta: PropTypes.arrayOf(PropTypes.object),\r\n  title: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default SEO\r\n","import React from 'react';\r\nimport styled, { css } from \"styled-components\";\r\n\r\nconst PostInfo = styled.div`\r\n    display: grid;\r\n    margin:10px;\r\n    grid-template-columns: 230px 700px;\r\n    grid-template-rows: 50px 20px 150px;\r\n    row-gap: 20px;\r\n    column-gap: 20px;\r\n    background: var(--third);\r\n    grid-template-areas:\r\n        \"img title\"\r\n        \"img date\"\r\n        \"img content\" ;\r\n    @media screen and (max-width: 990px){\r\n        // width: 90%;\r\n        grid-template-columns: 230px calc(100% - 260px);\r\n        grid-template-rows: 50px 20px 150px;\r\n    };\r\n    @media screen and (max-width: 600px){        \r\n        grid-template-columns: 100%;\r\n        grid-template-rows: 250px 50px 20px 150px;\r\n        grid-template-areas:\r\n        \"img\"\r\n        \"title\"\r\n        \"date\"\r\n        \"content\";\r\n    };\r\n`;\r\n\r\n\r\nconst ImgBox = styled.img`\r\n    grid-area: img;\r\n    height: 230px;\r\n    width: 230px;\r\n    backgroud:blue;\r\n    margin:10px;\r\n    border: 1px solid black;\r\n    @media screen and (max-width: 600px){        \r\n        margin: auto;\r\n    }\r\n    @media screen and (max-width: 290px){        \r\n        width: calc(100% - 20px);\r\n    }\r\n`;\r\n\r\nconst Info = styled.div`  \r\n    margin-left : 20px;\r\n\r\n    width : 650px;\r\n    @container (max-width: 200px){\r\n        width:100%;\r\n    }\r\n`;\r\nconst Title = styled.h1`\r\n    grid-area: title;\r\n    display: inline-block; \r\n    white-space: nowrap; \r\n    overflow: hidden; \r\n    text-overflow: ellipsis; \r\n    color: var(--primaryText);\r\n\r\n    white-space: normal; \r\n    line-height: 1; \r\n    height: 1em; \r\n    text-align: left; \r\n    word-wrap: break-word; \r\n    display: -webkit-box; \r\n    -webkit-line-clamp: 1; \r\n    -webkit-box-orient: vertical;\r\n\r\n    margin-left: 10px;\r\n    margin-right: 10px;\r\n`\r\nconst Content = styled.div` \r\n    grid-area: content;\r\n    display: inline-block; \r\n    white-space: nowrap; \r\n    overflow: hidden; \r\n    text-overflow: ellipsis; \r\n    color: var(--secondaryText);\r\n\r\n    white-space: normal; \r\n    line-height: 1.5; \r\n    height: 6em; \r\n    text-align: left; \r\n    word-wrap: break-word; \r\n    display: -webkit-box; \r\n    -webkit-line-clamp: 3; \r\n    -webkit-box-orient: vertical;\r\n\r\n    margin-left: 10px;\r\n    margin-right: 10px;\r\n    margin-top: 10px;\r\n`;\r\n\r\n\r\nconst Date = styled.div`\r\n    grid-area: date;\r\n    color: gray;\r\n    margin-left: 20px;\r\n    margin-right: 10px;\r\n`;\r\nconst postInfo = ({ title, date, content, imgPath }) => {\r\n    const isMain = content == null ? true : false\r\n    return(\r\n        <PostInfo isMain={isMain}>\r\n            <ImgBox src={imgPath}></ImgBox>\r\n            <Info>\r\n                <Title>{title}</Title>\r\n                <Date>{date}</Date>\r\n                <Content>{content}</Content>\r\n            </Info>\r\n        </PostInfo>\r\n    )\r\n}\r\n\r\nexport default postInfo;","import React from 'react';\r\nimport Index from './index'\r\nimport Content from '../components/content'\r\nimport {graphql, Link} from 'gatsby'\r\nimport PostInfo from '../components/contentComponents/postInfo'\r\nimport SEO from '../components/seo';\r\nimport styled from 'styled-components';\r\nimport Info from '../components/info';\r\n\r\nconst PostListElement = styled.div`\r\n  margin-top: 550px;\r\n  margin-bottom: 40px;\r\n`;\r\n\r\nconst Year = styled.div`\r\n  color: orange;\r\n  font-size: 3em;\r\n  font-weight: bold;\r\n  margin-left: 30px;\r\n`\r\nconst Title = styled.div`\r\n  font-size: 1.5em;\r\n  margin-top: 4px;\r\n  margin-left: 50px;\r\n  &:hover{\r\n    font-size: 1.6em;\r\n  }\r\n`\r\n\r\nconst PostList = ({ data, pageContext }) => {   \r\n    const postListData = data.allMdx.edges\r\n    const category = pageContext.category\r\n    let year = 0;\r\n    return (\r\n        <>\r\n            <SEO\r\n              title={category}\r\n              keywords={[`blog`, `gatsby`, `javascript`, `react`,`github pages`,category]}\r\n            />\r\n            <Info title={category}></Info>\r\n            <PostListElement>\r\n                {\r\n                  postListData.map((data,index)=>{\r\n                    const title = data.node.frontmatter.title\r\n                    const date = data.node.frontmatter.date\r\n                    const [y, w, d] = date.split('-')\r\n                    const src = \"/\"+data.node.slug\r\n                    // console.log(y)\r\n                    if(year != y){\r\n                      year = y\r\n                      return (\r\n                        <>\r\n                          <Year>{year}</Year>\r\n                          <Link key={index} to={src}><Title>[{w}.{d}] - {title}</Title></Link>\r\n                        </>\r\n                      )\r\n                    }\r\n                    else{\r\n                        return(\r\n                          <Link key={index} to={src}><Title>[{w}.{d}] - {title}</Title></Link>\r\n                        )\r\n                    }\r\n                  })\r\n                }\r\n                {/* {postListData.map((data,index)=>{\r\n                    const title = data.node.frontmatter.title\r\n                    const date = data.node.frontmatter.date\r\n                    const content = data.node.excerpt\r\n                    const src = \"/\"+data.node.slug\r\n                    // const imgPath = \"https://kwakjuhun.github.io/\"+data.node.frontmatter.img.childrenImageSharp[0].gatsbyImageData.images.fallback.src\r\n      \r\n                    const imgPath = data.node.frontmatter.img == null? null : data.node.frontmatter.img.childrenImageSharp[0].gatsbyImageData.images.fallback.src\r\n                    return (\r\n                      <Link key={index} to={src}>\r\n                        <PostInfo title={title} date={date} content={content} imgPath={imgPath}></PostInfo>\r\n                      </Link>\r\n                    )\r\n                })} */}\r\n            </PostListElement>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default PostList;\r\n\r\nexport const pageQuery = graphql`\r\nquery postList($category: String) {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n      }\r\n    }\r\n    allMdx(\r\n      sort: { fields: [frontmatter___date], order: DESC }\r\n      filter: {frontmatter: {category: {in: [$category]}}}) {\r\n      edges {\r\n        node {\r\n          slug\r\n          frontmatter {\r\n            title\r\n            category\r\n            date\r\n            }\r\n        excerpt\r\n        }\r\n      }\r\n    }\r\n  }\r\n  `"],"names":["InfoElement","styled","Title","props","theme","size","mobile","Date","Tags","title","date","undefined","SEO","description","lang","meta","site","useStaticQuery","metaDescription","siteMetadata","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps","PostListElement","Year","data","pageContext","postListData","allMdx","edges","category","year","keywords","map","index","node","frontmatter","split","y","w","d","src","slug","Link","key","to"],"sourceRoot":""}