{"version":3,"file":"component---src-pages-index-js-ae3096720ec9ef06a565.js","mappings":"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","sources":["webpack://a_z-blog/./src/providers/themeContext.js","webpack://a_z-blog/./src/components/headerComponent/darkmodeToggle.js","webpack://a_z-blog/./src/components/header.js","webpack://a_z-blog/./src/components/headerComponent/hamburger.js","webpack://a_z-blog/./src/styles/globalStyleTheme.js","webpack://a_z-blog/./src/components/test.js","webpack://a_z-blog/./src/styles/theme.js","webpack://a_z-blog/./src/providers/themeProvider.js","webpack://a_z-blog/./src/components/categoryBar.js","webpack://a_z-blog/./src/components/content.js","webpack://a_z-blog/./src/pages/index.js"],"sourcesContent":["import React, { useEffect } from 'react';\r\n\r\nconst themeStateContext = React.createContext();\r\nconst themeChangeContext = React.createContext();\r\n\r\nfunction changeTheme(state, action){\r\n    state = !state;\r\n    window.sessionStorage.setItem(\"isDarkmode\", state);\r\n    console.log(state)\r\n    return state\r\n}\r\n\r\nfunction SelectThemeProvider({children}){\r\n    const [state, dispatch] = React.useReducer(changeTheme, false);\r\n\r\n    useEffect(() => {\r\n        const isBrowser = typeof window !== \"undefined\";\r\n        let theme = false;\r\n        if(isBrowser){\r\n            theme = window.sessionStorage.getItem(\"isDarkmode\");\r\n            if(theme === null){\r\n                window.sessionStorage.setItem(\"isDarkmode\", false)\r\n            }else if(theme == \"true\"){\r\n                console.log(\"dark\")\r\n                dispatch();\r\n            }\r\n        }\r\n    },[dispatch])\r\n    return(\r\n        <themeStateContext.Provider value={state}>\r\n            <themeChangeContext.Provider value={dispatch}>\r\n                {children}\r\n            </themeChangeContext.Provider>\r\n        </themeStateContext.Provider>\r\n    )        \r\n}\r\n\r\nfunction useThemeState(){\r\n    const context = React.useContext(themeStateContext);\r\n    return context\r\n}\r\n\r\nfunction useThemeChange(){\r\n    const context = React.useContext(themeChangeContext);\r\n    return context\r\n}\r\n\r\nexport {\r\n    SelectThemeProvider,\r\n    useThemeState,\r\n    useThemeChange,\r\n}","import React, {useState, useEffect} from 'react';\r\nimport styled from 'styled-components';\r\nimport { useThemeChange, useThemeState } from '../../providers/themeContext';\r\n\r\nconst Toggle = styled.label`\r\n  position: absolute;\r\n  top:10px;\r\n  right:10px;\r\n  width: 60px;\r\n  height: 34px;\r\n`;\r\n\r\n\r\nconst Slider = styled.span`\r\n  position: absolute;\r\n  cursor: pointer;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background-color: #ccc;\r\n  -webkit-transition: .4s;\r\n  border-radius: 34px;\r\n  transition: .4s;\r\n  &:before {\r\n    position: absolute;\r\n    content: \"\";\r\n    height: 26px;\r\n    width: 26px;\r\n    left: 4px;\r\n    bottom: 4px;\r\n    background-color: white;\r\n    -webkit-transition: .4s;\r\n    transition: .4s;\r\n    border-radius: 50%;\r\n  }\r\n`;\r\nconst Checkbox = styled.input`\r\n  display:none;\r\n  &:checked + ${Slider}{\r\n    background-color: #2196F3;\r\n  }\r\n  &:focus + ${Slider} {\r\n    box-shadow: 0 0 1px #2196F3;\r\n  }\r\n  &:checked + ${Slider}:before {\r\n    -webkit-transform: translateX(26px);\r\n    -ms-transform: translateX(26px);\r\n    transform: translateX(26px);\r\n  }\r\n`;\r\n\r\nconst DarkmodeToggle = () => {\r\n  return (\r\n    <Toggle>\r\n      <Checkbox type=\"checkbox\" checked={useThemeState()} onChange={useThemeChange({type:\"change\"})}></Checkbox>\r\n      <Slider></Slider>\r\n    </Toggle>\r\n  )\r\n}\r\nexport default DarkmodeToggle;","import React, { useState, useEffect } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\n// import theme from \"../styles/theme\";\r\nimport DarkmodeToggle from \"./headerComponent/darkmodeToggle\";\r\nimport Hamburger from \"./headerComponent/hamburger\";\r\n\r\nconst Logo = styled.h2`\r\n    position: absolute;\r\n    left: 200px;\r\n    top: 10px;\r\n    text-align: center;\r\n`;\r\n\r\nconst HeaderElement = styled.div`\r\n    position: fixed;\r\n    width: 100%;\r\n    height: 80px;\r\n    background-color: #fff;\r\n    top: ${props => props.isHeader? '0px' : '-80px'};\r\n    opacity: 0.85;\r\n    backdrop-filter: blur(10px);\r\n    transition: .5s ease-out;\r\n\r\n    ${props => props.isScrolled && css`\r\n        box-shadow: 0 4px 4px rgba(31, 35, 46, .15);\r\n        transition: box-shadow .5s ease-in;    \r\n        transition: .5s ease-in;\r\n    `}\r\n`\r\n\r\nconst Header = () => {\r\n    const [isScrolled, setIsScrolled] = useState(false);\r\n    const [isHeader, setIsHeader] = useState(true);\r\n    const [thisLocation, setThisLocation] = useState(0);\r\n    const headerListener = () => {\r\n        const thisWinLocation = window.pageYOffset\r\n        if(thisLocation < thisWinLocation) { // 내림\r\n            setIsHeader(false)\r\n        }else{ // 올림\r\n            setIsHeader(true)\r\n        }\r\n        setThisLocation(thisWinLocation)\r\n        setIsScrolled(window.pageYOffset > 0);\r\n    };\r\n    useEffect(() => {\r\n      window.addEventListener(\"scroll\", headerListener);\r\n      return () => {\r\n        window.removeEventListener(\"scroll\", headerListener)\r\n      }\r\n    }, [isScrolled, thisLocation]);\r\n    \r\n\r\n    return(\r\n        <HeaderElement isScrolled={isScrolled} isHeader={isHeader}>\r\n            {/* <Hamburger></Hamburger> */}\r\n            <Logo>K-Blog</Logo>\r\n            <DarkmodeToggle/>\r\n        </HeaderElement>\r\n    )\r\n};\r\n//  깃, 이메일, 다크모드\r\nexport default Header;","import React from 'react';\r\nimport styled,{css} from 'styled-components';\r\n\r\n// const Hamburger = styled.button`\r\n//     position: absolute;\r\n//     top: 0px;\r\n//     left: 0px;\r\n//     width : 80px;\r\n//     height : 80px;\r\n//     border: 0px;\r\n//     background:white;\r\n// `;\r\n// const LineWrapper = styled.div`\r\n//     cursor:pointer;\r\n//     width:56px;  \r\n//     height:35px;\r\n//     position:relative;\r\n//     left:3px;\r\n// `;\r\n\r\n// const Line = styled.div`\r\n//     background:black;\r\n//     margin-top:6px;\r\n//     margin-bottom:6px;\r\n//     width:56px;\r\n//     height:7px;\r\n//     border-radius:2px;\r\n//     boxShadow:0 1px 3px rgba(0,0,0,.5);\r\n//     position:relative;\r\n//     -webkit-transition: .4s;\r\n//     transition: all .4s;\r\n//     ${props => props.clicked}\r\n// `;\r\n\r\n// const TopLine = css`\r\n//     ${Hamburger}:checked{\r\n//         transform: translateY(15px) rotate(225deg);\r\n//         transition-delay: 0.2s;\r\n//     }\r\n\r\n// `\r\n// const MidLine = css`\r\n//     ${Hamburger}:checked{\r\n//         opacity: 0;\r\n//         transform: translateX(50px);\r\n//         background:white;\r\n//     }\r\n\r\n// `\r\n// const BottomLine = css`\r\n//     ${Hamburger}:checked{\r\n//         transform: translateY(-11px) rotate(-225deg);\r\n//         transition-delay: 0.2s;\r\n//     }\r\n// `\r\n\r\n// const scrolled = css`\r\n//     box-shadow: 0 4px 4px rgba(31, 35, 46, .15);\r\n//     transition: box-shadow .5s ease-in;\r\n// `;\r\n\r\nconst Test = styled.input`\r\n    width:50px;\r\n    height:50px;\r\n`;\r\n\r\nconst hamburger = () => {\r\n    return(\r\n        // <Hamburger type=\"checkbox\" onClick={(e)=>console.log(e.target.checked)}><LineWrapper>\r\n        //     <Line clicked={TopLine}></Line>\r\n        //     <Line clicked={MidLine}></Line>\r\n        //     <Line clicked={BottomLine}></Line>\r\n        // </LineWrapper></Hamburger>\r\n        <Test type=\"checkbox\"></Test>\r\n    )\r\n};\r\n\r\nexport default hamburger;","import { createGlobalStyle } from 'styled-components';\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\nhtml{\r\n  height:200%;\r\n}\r\nbody{\r\n  padding: 0;\r\n  margin: 0;\r\n  background:${(props) => props.theme.colors.bgColor};\r\n  height:200%;\r\n  overflow-x:hidden;\r\n  overflow-y:auto;\r\n}\r\n`;\r\n\r\nexport default GlobalStyle;","import React, { useState } from \"react\";\r\nimport styled, { ThemeConsumer } from \"styled-components\";\r\nimport { useThemeState } from \"../providers/themeContext\";\r\n\r\nconst TestComponent = styled.div`\r\n  width : 1000px;\r\n  height : 1000px;\r\n  background:${(props) => props.theme.colors.bgColor};\r\n`;\r\n\r\nconst Test = () => {\r\n  const theme = useThemeState();\r\n  // console.log(\"dd\", props)\r\n  return (\r\n  // <TestComponent theme={theme}></TestComponent>\r\n  <>\r\n    <TestComponent></TestComponent>\r\n    <TestComponent></TestComponent>\r\n  </>\r\n  )\r\n};\r\n\r\nexport default Test;","const size = {\r\n    mobile: \"770px\",\r\n    tableS: \"1023px\",\r\n    tableM: \"1220px\",\r\n    tableL: \"1280px\",\r\n    laptop: \"1460px\",\r\n    desktop: \"1700px\",\r\n};\r\n\r\nconst theme = {\r\n    mobile: `(max-width: ${size.mobile})`,\r\n    tableS: `(max-width: ${size.tableS})`,\r\n    tableM: `(max-width: ${size.tableM})`,\r\n    tableL: `(max-width: ${size.tableL})`,\r\n    laptop: `(min-width: ${size.laptop})`,\r\n    desktop: `(min-width: ${size.desktop})`,\r\n}\r\n    \r\nexport default theme;\r\n\r\nexport const dark ={\r\n    colors:{\r\n        titleColor : '#F5EAEA',\r\n        bgColor: '#4D4D4D',\r\n    }\r\n}\r\n\r\nexport const light ={\r\n    colors:{\r\n        titleColor : '#4D4D4D',\r\n        bgColor: '#F5EAEA',\r\n    }\r\n}","import React, {useState} from \"react\"\r\nimport { ThemeProvider } from 'styled-components';\r\nimport { useThemeState, useThemeChange } from './themeContext';\r\nimport theme, {dark, light } from \"../styles/theme\";\r\n\r\nconst Theme = ({children}) => {\r\n    console.log(\"theme Provider\",useThemeState());\r\n    return (\r\n        <ThemeProvider theme={useThemeState()? dark:light} size={theme}>\r\n            {children}\r\n        </ThemeProvider>\r\n    )\r\n}\r\n\r\nexport default Theme;","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst CategoryElement = styled.div`\r\n    height:80%;\r\n    width:20px;\r\n    background: white;\r\n    position:fixed;\r\n    top:10%;\r\n    left:0px;\r\n    transition: .5s ease-out;\r\n\r\n    &:hover{\r\n        transition: .5s ease-in;\r\n        width:300px;\r\n    }\r\n`;\r\n\r\n\r\nconst Category = ({chiledren}) => {\r\n    return(\r\n    <CategoryElement>\r\n        {chiledren}\r\n    </CategoryElement>\r\n    )\r\n};\r\nexport default Category;","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\n\r\nconst Layer = styled.div`\r\n    display: table;\r\n    width:100%;\r\n    height:500px;\r\n    background:${(props) => props.theme.colors.bgColor};\r\n`;\r\nconst Layer_inner = styled.div`\r\n    display: table-cell;\r\n    text-align: center;\r\n    vertical-align: middle;\r\n`;\r\nconst ContentElement = styled.div`\r\n    display: inline-block;\r\n    width: 980px;\r\n    background:#f00;\r\n    color:#fff;\r\n    top:\r\n`\r\nconst Content = () => {\r\n    return (\r\n        <Layer>\r\n            <Layer_inner>\r\n                <ContentElement>MainContent</ContentElement>\r\n            </Layer_inner>\r\n        </Layer>\r\n    )\r\n}\r\n\r\n\r\nexport default Content;","import React from \"react\"\r\nimport Header from \"../components/header\"\r\nimport Test from \"../components/test\"\r\nimport styled from  'styled-components'\r\nimport GlobalStyle from \"../styles/globalStyleTheme\"\r\nimport ThemeProvider from '../providers/themeProvider';\r\nimport { SelectThemeProvider } from \"../providers/themeContext\"\r\nimport CategoryBar from \"../components/categoryBar\";\r\nimport Contents from \"../components/content\";\r\nconst MainElement = styled.main`\r\n  height:200%;\r\n`;\r\n\r\nconst IndexPage = () => {\r\n  return (\r\n    <SelectThemeProvider>\r\n      <ThemeProvider>\r\n        <GlobalStyle/>\r\n        <MainElement>\r\n          <Header></Header>\r\n          <CategoryBar></CategoryBar>\r\n          <Contents></Contents>\r\n          {/* <Test></Test> */}\r\n        </MainElement>\r\n      </ThemeProvider>\r\n    </SelectThemeProvider>\r\n  )\r\n}\r\n\r\nexport default IndexPage\r\n"],"names":["themeStateContext","React","themeChangeContext","changeTheme","state","action","window","sessionStorage","setItem","console","log","SelectThemeProvider","children","dispatch","useEffect","theme","getItem","Provider","value","useThemeState","Toggle","styled","Slider","Checkbox","type","checked","onChange","Logo","HeaderElement","props","isHeader","isScrolled","css","useState","setIsScrolled","setIsHeader","thisLocation","setThisLocation","headerListener","thisWinLocation","pageYOffset","addEventListener","removeEventListener","colors","bgColor","createGlobalStyle","mobile","tableS","tableM","tableL","laptop","desktop","dark","titleColor","light","ThemeProvider","size","CategoryElement","chiledren","Layer","Layer_inner","ContentElement","MainElement"],"sourceRoot":""}