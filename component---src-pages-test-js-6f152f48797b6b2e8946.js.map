{"version":3,"file":"component---src-pages-test-js-6f152f48797b6b2e8946.js","mappings":"8IAMMA,G,OAAgBC,EAAAA,QAAAA,IAAAA,WAAH,8DAAGA,CAAH,kCAcnB,UARa,WACX,OACA,gCACE,gBAACD,EAAD,S,mHCbEE,EAAoBC,EAAAA,gBACpBC,EAAqBD,EAAAA,gBAE3B,SAASE,EAAYC,EAAOC,GAGxB,OAFAD,GAASA,EACTE,OAAOC,eAAeC,QAAQ,aAAcJ,GACrCA,EAGX,SAASK,EAAT,GAAyC,IAAXC,EAAU,EAAVA,SAC1B,EAA0BT,EAAAA,WAAiBE,GAAa,GAAjDC,EAAP,KAAcO,EAAd,KAcA,OAZAC,EAAAA,EAAAA,YAAU,WACN,IACIC,GAAQ,EADwB,oBAAXP,SAIR,QADbO,EAAQP,OAAOC,eAAeO,QAAQ,eAElCR,OAAOC,eAAeC,QAAQ,cAAc,GAC9B,QAATK,GACLF,OAGV,CAACA,IAEC,gBAACX,EAAkBe,SAAnB,CAA4BC,MAAOZ,GAC/B,gBAACF,EAAmBa,SAApB,CAA6BC,MAAOL,GAC/BD,IAMjB,SAASO,IAEL,OADgBhB,EAAAA,WAAiBD,GAIrC,SAASkB,IAEL,OADgBjB,EAAAA,WAAiBC","sources":["webpack://a_z-blog/./src/pages/test.js","webpack://a_z-blog/./src/providers/themeContext.js"],"sourcesContent":["import React from \"react\";\nimport { graphql } from \"gatsby\";\nimport styled, { ThemeConsumer } from \"styled-components\";\nimport { useThemeState } from \"../providers/themeContext\";\n\n\nconst TestComponent = styled.div`\n  width : 1000px;\n  height : 1000px;\n  // background:${(props) => props.theme.colors.bgColor};\n`;\n\nconst Test = () => {\n  return (\n  <>\n    <TestComponent></TestComponent>\n  </>\n  )\n};\n\nexport default Test;","import React, { useEffect } from 'react';\n\nconst themeStateContext = React.createContext();\nconst themeChangeContext = React.createContext();\n\nfunction changeTheme(state, action){\n    state = !state;\n    window.sessionStorage.setItem(\"isDarkmode\", state);\n    return state\n}\n\nfunction SelectThemeProvider({children}){\n    const [state, dispatch] = React.useReducer(changeTheme, false);\n\n    useEffect(() => {\n        const isBrowser = typeof window !== \"undefined\";\n        let theme = false;\n        if(isBrowser){\n            theme = window.sessionStorage.getItem(\"isDarkmode\");\n            if(theme === null){\n                window.sessionStorage.setItem(\"isDarkmode\", false)\n            }else if(theme == \"true\"){\n                dispatch();\n            }\n        }\n    },[dispatch])\n    return(\n        <themeStateContext.Provider value={state}>\n            <themeChangeContext.Provider value={dispatch}>\n                {children}\n            </themeChangeContext.Provider>\n        </themeStateContext.Provider>\n    )        \n}\n\nfunction useThemeState(){\n    const context = React.useContext(themeStateContext);\n    return context\n}\n\nfunction useThemeChange(){\n    const context = React.useContext(themeChangeContext);\n    return context\n}\n\nexport {\n    SelectThemeProvider,\n    useThemeState,\n    useThemeChange,\n}"],"names":["TestComponent","styled","themeStateContext","React","themeChangeContext","changeTheme","state","action","window","sessionStorage","setItem","SelectThemeProvider","children","dispatch","useEffect","theme","getItem","Provider","value","useThemeState","useThemeChange"],"sourceRoot":""}