{"version":3,"file":"component---src-templates-main-js-ee911590f7efc5c3d7f8.js","mappings":"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","sources":["webpack://a_z-blog/./src/components/seo.js","webpack://a_z-blog/./src/components/mainComponents/motto.js","webpack://a_z-blog/./src/components/mainComponents/introItem.js","webpack://a_z-blog/./src/components/mainComponents/introduce.js","webpack://a_z-blog/./src/components/mainComponents/mainContents.js","webpack://a_z-blog/./src/templates/main.js"],"sourcesContent":["/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { useStaticQuery, graphql } from 'gatsby'\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\n\nconst MottosWrapper = styled.div` \n    position: relative;\n    margin: 0 auto;\n    width: 100%;\n    height: 40px;\n    text-align: center;\n    vertical-align: middle;\n`\nconst Motto = styled.div`\n    position: absolute;\n    opacity: ${(props) => props.opacity};\n    transition: opacity .5s;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    font-size: 1.5rem;\n    color: #113800;\n    font-weight: 700;\n    @media screen and ${props => props.theme.size.mobile}{\n        font-size: 1em;   \n    }\n`\n\nconst MottoElement = () => {\n    const [thisItem, setThisItem] = useState(0);\n    useEffect(()=>{\n        function Loof(){\n            let cnt = 0;\n            const start = () => {\n                cnt += 1\n                setThisItem(cnt % 3);\n            }\n            return start;\n        }\n        setInterval(Loof(),5000);\n    },[])\n\n    return (\n    <MottosWrapper>\n        <Motto opacity={thisItem == 0 ? 1:0}> 일단 해보자 </Motto>\n        <Motto opacity={thisItem == 1 ? 1:0}> Let's do it </Motto>\n        <Motto opacity={thisItem == 2 ? 1:0}> 一応やってみよう </Motto>\n    </MottosWrapper>\n    )\n}\n\n\nexport default MottoElement;","import React from 'react';\nimport styled from 'styled-components';\n\nconst Item = styled.div`\n    display: block;\n    margin: auto 0;\n    margin-left: 15px;\n    white-space:nowrap;\n`   \nconst ItemTitle = styled.div`\n    font-weight: bold;\n    font-size: x-large;\n`\n\nconst ItemContent = styled.div`\n    margin-top: 10px;\n    font-size: larger;\n`\nconst ItemBody = styled.div`\n    display: inline-block;\n    margin-left: 20px;\n`\nconst ItemImage = styled.img`\n    display: inline-block;\n    width: 50px;\n    height: 50px;\n`\n\nconst IntroItem = ({img, title, content}) => {\n    return (\n        <Item>\n            <ItemImage src={img}></ItemImage>\n            <ItemBody>\n                <ItemTitle>{title}</ItemTitle>\n                <ItemContent>{content}</ItemContent>\n            </ItemBody>\n        </Item>\n\n    )\n}\n\nexport default IntroItem;","import React from 'react';\nimport styled from 'styled-components';\n\nimport IntroItem from './introItem';\n\nconst IntroduceElement = styled.div`\n    display: grid;\n    width: 1000px;\n    height: 70%;\n    margin: 0 auto;\n    background-color: rgba(255,255,255,1);\n    border-radius: 20px;\n    grid-template-columns: repeat(3, 1fr);\n    @media screen and ${props => props.theme.size.tablet}{\n        width: 90%;\n    }\n    @media screen and ${props => props.theme.size.mobile}{\n        width: 600px;\n        grid-template-columns: repeat(2, 1fr);\n    }\n`\n\n\nconst Title = styled.h1`\n    display: block;\n    margin-top: 100px;\n    text-align: center;\n    text-shadow: 1px 1px #FFFFFF;\n`\n\nconst Introduce = () => {\n    return(\n        <>\n            <Title>Introduce</Title>\n            <IntroduceElement>\n                <IntroItem\n                    img={`introduceName.png`}\n                    title=\"이름\"\n                    content=\"곽주훈\"\n                />\n                <IntroItem\n                    img={`introduceBirthday.png`}\n                    title=\"생년월일\"\n                    content=\"97.11.18\"\n                />\n                <IntroItem\n                    img={`introducePhone.png`}\n                    title=\"연락처\"\n                    content=\"010-5409-2562\"\n                />\n                <IntroItem\n                    img={`introduceEmail.png`}\n                    title=\"이메일\"\n                    content=\"hn04193@naver.com\"\n                />\n                <IntroItem\n                    img={`introduceLanguage.png`}\n                    title=\"언어\"\n                    content=\"한국어 日本語\"\n                />\n                <IntroItem\n                    img={`introduceHobby.png`}\n                    title=\"취미\"\n                    content=\"힙합 듣기\"\n                />\n                \n\n                {/* <thead>\n                    <tr>\n                        <th>ㅇㅇ</th><th>ㄴㄴ</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr>\n                        <td>Name : Kwak Juhun</td> <td>Java Script(react)</td>\n                    </tr>\n                    <tr>\n                        <td>Birthday : 1997. 11. 18</td><td>Python (Django)</td>\n                    </tr>\n                    <tr>\n                        <td>Language : Korean, Japanese</td><td>Php(Laravel)</td>\n                    </tr>\n                    <tr>\n                        <td>Hobby : Rap Listening</td>\n                    </tr>\n                </tbody> */}\n            </IntroduceElement>\n        </>\n    )\n}  \n\nexport default Introduce;","import React, { useState, useEffect } from 'react';\nimport styled, { css } from 'styled-components';\n\nimport Introduce from './introduce';\n\nconst ContentsElement = styled.div`\n    height: 3000px;\n`\n\nconst First = styled.div`\n    position: fixed;\n    top: 0px;\n    left: 0px;\n    background-color: rgba(255,66,63);\n    width: 100%;\n    height: 100%;\n    ${props => props.next ? \"\": css`\n        transform: translateY(830px);\n    `}\n    transition: .5s;\n`;\n\nconst Second = styled.div`\n    position: fixed;\n    background: orange;\n    top: 0px;\n    left: 0px;\n    width: 100vw;\n    height: 100vh;\n    ${props => props.next ? \"\": css`\n        transform: translateY(865px);\n    `}\n    transition: .5s;\n`;\n\nconst Third = styled.div`\n    position: fixed;\n    background: yellow;\n    top: 0px;\n    left: 0px;\n    width: 100vw;\n    height: 100vh;\n    ${props => props.next ? \"\": css`\n        transform: translateY(900px);\n    `}\n    transition: .5s;\n`;\n\nconst TopButton = styled.a`\n    display:${props => props.visible? \"scroll\":\"none\"};\n    position:fixed;\n    bottom:20px;\n    right:10px;\n\n    border: none;\n    padding: 15px 30px;\n    border-radius: 15px;\n    font-family: \"paybooc-Light\", sans-serif;\n    box-shadow: 0 15px 35px rgba(0, 0, 0, 0.2);\n    text-decoration: none;\n    font-weight: 600;\n    transition: 0.25s;    \n    background-color: #6aafe6;\n    color: #d4dfe6;\n`\n\n// 파일철 형태 디자인으로 \nconst MainContents = () => {\n    const [isSection, setIsSection] = useState(0);\n\n    useEffect(() => {\n        const innerHeight = window.innerHeight;\n        function changeSection(){\n            let thisLoc = window.pageYOffset;\n            setIsSection(parseInt((thisLoc+(innerHeight-10))/innerHeight))\n        }\n        changeSection()\n        window.addEventListener(\"scroll\", changeSection);\n        return () => {\n            window.removeEventListener(\"scroll\", changeSection);\n        }\n    }, [])\n    return (\n        <ContentsElement>\n            <First next={isSection >= 1}><Introduce></Introduce></First>\n            <Second next={isSection >= 2}></Second>\n            <Third next={isSection >= 3}></Third>\n            <TopButton visible={isSection >= 1} href='#'> 위로 </TopButton>\n        </ContentsElement>\n    )\n}\n\nexport default MainContents;","import React, { useState, useEffect } from 'react';\nimport styled  from 'styled-components';\nimport SEO from '../components/seo';\nimport Motto from '../components/mainComponents/motto';\nimport MainContents from '../components/mainComponents/mainContents';\n\nconst MainPage = styled.div`\n    // height: 100%;\n    // background-color: #9AC95F;\n    // background:${(props)=>props.theme.colors.second}};\n    // color:${(props)=>props.theme.colors.secondaryText}};\n    // background:var(--second);\n    // color:var(--secondaryText);\n`\n\nconst Info = styled.div`\n    background-color: #9AC95F;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    padding: 0 1rem;\n    height: 100vh;\n`\nconst SiteTitle = styled.div`\n    color: #113800;\n    font-size: 3em;\n    font-weight: 900;\n    @media screen and ${props => props.theme.size.mobile}{\n        font-size: 2em;   \n        font-weight: 600;\n    }\n`\n\nconst SocialWrapper = styled.div`\n    position: relative;\n    margin-top: 10px;\n`\nconst Inner = styled.div`\n    position: relative;\n    width: 1160px;\n    margin: 0 auto;\n    padding: 0 32px;\n    background-color: #2A9BD5;\n    height: 1000px;\n`\n\nconst Main = ({ data }) => {    \n    return (\n        <>\n            <SEO\n                title={\"main Page\"}\n                keywords={[`blog`, `gatsby`, `javascript`, `react`,`github pages`,`css`]}\n            />\n            <MainPage>\n                <Info>\n                    <SiteTitle>Kwak - Blog</SiteTitle>\n                    <Motto/>\n                    <SocialWrapper>\n                        <a href=\"https://github.com/kwakjuhun\">\n                            <img src={`GitHub.png`}></img>\n                        </a>\n                    </SocialWrapper>\n                </Info>\n                <MainContents/>\n                    {/* <Inner></Inner> */}\n            </MainPage>\n        </> \n    )\n};\n\nexport default Main;"],"names":["SEO","description","lang","meta","title","site","useStaticQuery","metaDescription","siteMetadata","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps","MottosWrapper","styled","Motto","props","opacity","theme","size","mobile","useState","thisItem","setThisItem","useEffect","cnt","setInterval","Item","ItemTitle","ItemContent","ItemBody","ItemImage","img","src","IntroduceElement","tablet","Title","ContentsElement","First","next","css","Second","Third","TopButton","visible","isSection","setIsSection","innerHeight","window","changeSection","thisLoc","pageYOffset","parseInt","addEventListener","removeEventListener","href","MainPage","Info","SiteTitle","SocialWrapper","data","keywords"],"sourceRoot":""}