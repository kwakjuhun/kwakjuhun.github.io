{"version":3,"file":"component---src-templates-main-js-ac337992d53053e72341.js","mappings":"2IAYA,SAASA,EAAT,GAAkD,IAAnCC,EAAkC,EAAlCA,YAAaC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,KAAMC,EAAS,EAATA,MAC9BC,GAASC,EAAAA,EAAAA,gBAAe,YAAxBD,KAcFE,EAAkBN,GAAeI,EAAKG,aAAaP,YAEzD,OACE,gBAAC,IAAD,CACEQ,eAAgB,CACdP,KAAAA,GAEFE,MAAOA,EACPM,cAAa,QAAUL,EAAKG,aAAaJ,MACzCD,KAAM,CACJ,CACEQ,KAAK,cACLC,QAASL,GAEX,CACEM,SAAS,WACTD,QAASR,GAEX,CACES,SAAS,iBACTD,QAASL,GAEX,CACEM,SAAS,UACTD,QAAQ,WAEV,CACED,KAAK,eACLC,QAAQ,WAEV,CACED,KAAK,kBACLC,QAASP,EAAKG,aAAaM,QAE7B,CACEH,KAAK,gBACLC,QAASR,GAEX,CACEO,KAAK,sBACLC,QAASL,IAEXQ,OAAOZ,KAKfH,EAAIgB,aAAe,CACjBd,KAAK,KACLC,KAAM,GACNF,YAAY,IAUd,O,iGCpFMgB,EAAgBC,EAAAA,QAAAA,IAAAA,WAAH,+DAAGA,CAAH,uGAQbC,EAAQD,EAAAA,QAAAA,IAAAA,WAAH,uDAAGA,CAAH,0JAEI,SAACE,GAAD,OAAWA,EAAMC,WAkChC,EAxBqB,WACjB,OAAgCC,EAAAA,EAAAA,UAAS,GAAlCC,EAAP,KAAiBC,EAAjB,KAaA,OAZAC,EAAAA,EAAAA,YAAU,WACN,IACQC,EAORC,aAPQD,EAAM,EACI,WAEVF,GADAE,GAAO,GACW,KAIP,OACrB,IAGF,gBAACT,EAAD,KACI,gBAACE,EAAD,CAAOE,QAAqB,GAAZE,EAAgB,EAAE,GAAlC,YACA,gBAACJ,EAAD,CAAOE,QAAqB,GAAZE,EAAgB,EAAE,GAAlC,iBACA,gBAACJ,EAAD,CAAOE,QAAqB,GAAZE,EAAgB,EAAE,GAAlC,gBCpCFK,EAAWV,EAAAA,QAAAA,IAAAA,WAAH,yDAAGA,CAAH,MASRW,EAAOX,EAAAA,QAAAA,IAAAA,WAAH,qDAAGA,CAAH,6kBA6BJY,EAAYZ,EAAAA,QAAAA,IAAAA,WAAH,0DAAGA,CAAH,kDAMTa,EAAgBb,EAAAA,QAAAA,IAAAA,WAAH,8DAAGA,CAAH,wCAIbc,EAAQd,EAAAA,QAAAA,IAAAA,WAAH,sDAAGA,CAAH,yGAQLe,EAAOf,EAAAA,QAAAA,IAAAA,WAAH,qDAAGA,CAAH,MAiCV,EA7Ba,SAAC,GAAa,EAAXgB,KAEZ,OACI,gCACI,gBAAC,IAAD,CACI9B,MAAO,YACP+B,SAAU,CAAC,OAAD,sDAEd,gBAACP,EAAD,KACI,gBAACC,EAAD,KACI,gBAACC,EAAD,oBACA,gBAAC,EAAD,MACA,gBAACC,EAAD,KACI,qBAAGK,KAAK,gCACJ,uBAAKC,IAAG,kBAIhB,kCACJ,gBAACJ,EAAD,KACI,gBAACD,EAAD","sources":["webpack://a_z-blog/./src/components/seo.js","webpack://a_z-blog/./src/components/mainComponents/motto.js","webpack://a_z-blog/./src/templates/main.js"],"sourcesContent":["/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { useStaticQuery, graphql } from 'gatsby'\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\n\nconst MottosWrapper = styled.div` \n    position: relative;\n    margin: 0 auto;\n    width: 100%;\n    height: 40px;\n    text-align: center;\n    vertical-align: middle;\n`\nconst Motto = styled.div`\n    position: absolute;\n    opacity: ${(props) => props.opacity};\n    transition: opacity .5s;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    font-size: 1.5rem;\n    color: #113800;\n    font-weight: 700;\n`\n\nconst MottoElement = () => {\n    const [thisItem, setThisItem] = useState(0);\n    useEffect(()=>{\n        function Loof(){\n            let cnt = 0;\n            const start = () => {\n                cnt += 1\n                setThisItem(cnt % 3);\n            }\n            return start;\n        }\n        setInterval(Loof(),5000);\n    },[])\n\n    return (\n    <MottosWrapper>\n        <Motto opacity={thisItem == 0 ? 1:0}> 일단 해보자 </Motto>\n        <Motto opacity={thisItem == 1 ? 1:0}> Let's do it </Motto>\n        <Motto opacity={thisItem == 2 ? 1:0}> 一応やってみよう </Motto>\n    </MottosWrapper>\n    )\n}\n\n\nexport default MottoElement;","import React, { useEffect } from 'react';\nimport styled  from 'styled-components';\nimport SEO from '../components/seo';\nimport Motto from '../components/mainComponents/motto';\n\nconst MainPage = styled.div`\n    // height: 100%;\n    // background-color: #9AC95F;\n    // background:${(props)=>props.theme.colors.second}};\n    // color:${(props)=>props.theme.colors.secondaryText}};\n    // background:var(--second);\n    // color:var(--secondaryText);\n`\n\nconst Info = styled.div`\n    background-color: #9AC95F;\n    display: -webkit-box;\n    display: -moz-box;\n    display: -webkit-flex;\n    display: -ms-flexbox;\n    display: box;\n    display: flex;\n    -webkit-box-orient: vertical;\n    -moz-box-orient: vertical;\n    -o-box-orient: vertical;\n    -webkit-flex-direction: column;\n    -ms-flex-direction: column;\n    flex-direction: column;\n    -webkit-box-pack: center;\n    -moz-box-pack: center;\n    -o-box-pack: center;\n    -ms-flex-pack: center;\n    -webkit-justify-content: center;\n    justify-content: center;\n    -webkit-box-align: center;\n    -moz-box-align: center;\n    -o-box-align: center;\n    -ms-flex-align: center;\n    -webkit-align-items: center;\n    align-items: center;\n    padding: 0 1rem;\n    height: 60vh;\n`\nconst SiteTitle = styled.div`\n    color: #113800;\n    font-size: 3em;\n    font-weight: 900;\n`\n\nconst SocialWrapper = styled.div`\n    position: relative;\n    margin-top: 10px;\n`\nconst Inner = styled.div`\n    position: relative;\n    width: 1160px;\n    margin: 0 auto;\n    padding: 0 32px;\n    background-color: #2A9BD5;\n    height: 1000px;\n`\nconst Body = styled.div`\n`\n\n\nconst Main = ({ data }) => {\n    // const categoriesPosts = data.allMdx.group\n    return (\n        <>\n            <SEO\n                title={\"main Page\"}\n                keywords={[`blog`, `gatsby`, `javascript`, `react`,`github pages`,`css`]}\n            />\n            <MainPage>\n                <Info>\n                    <SiteTitle>Kwak - Blog</SiteTitle>\n                    <Motto/>\n                    <SocialWrapper>\n                        <a href=\"https://github.com/kwakjuhun\">\n                            <img src={`GitHub.png`}></img>\n                        </a>\n                    </SocialWrapper>\n                </Info>\n                    <h1>엎는 중</h1>\n                <Body>\n                    <Inner>\n\n                    </Inner>\n                </Body>\n            </MainPage>\n        </> \n    )\n};\n\nexport default Main;"],"names":["SEO","description","lang","meta","title","site","useStaticQuery","metaDescription","siteMetadata","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps","MottosWrapper","styled","Motto","props","opacity","useState","thisItem","setThisItem","useEffect","cnt","setInterval","MainPage","Info","SiteTitle","SocialWrapper","Inner","Body","data","keywords","href","src"],"sourceRoot":""}